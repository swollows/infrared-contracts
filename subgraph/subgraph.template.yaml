specVersion: 0.0.8
description: Infrared Subgraph
repository: https://github.com/infrared-dao/infrared-mono-repo
schema:
  file: ./schema.graphql
dataSources:
  # --------------------------------------
  #            INFRARED
  # --------------------------------------
  - kind: ethereum/contract
    name: Infrared
    network: {{ slug }}
    source:
      address: "0xe9faa96e402E18d03CF6C4c0B8eF86793B746BDc"
      startBlock: 282813
      abi: Infrared
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: Infrared
          file: ../contracts/out/Infrared.sol/Infrared.abi.json
        - name: ERC20
          file: ../contracts/out/ERC20.sol/ERC20.abi.json
      eventHandlers:
        - event: NewVault(address,indexed address,indexed address,address,address[])
          handler: handleNewVault
        - event: RewardSupplied(indexed address,indexed address,uint256)
          handler: handleRewardSupplied
        - event: IBGTSupplied(indexed address,uint256)
          handler: handleIBGTSupplied
        - event: ValidatorsAdded(address,address[])
          handler: handleValidatorsAdded
        - event: ValidatorsRemoved(address,address[])
          handler: handleValidatorsRemoved
      file: ./src/infrared.ts
  # --------------------------------------
  #            INFRARED VAULT
  # --------------------------------------
templates:
  - name: InfraredVault
    kind: ethereum/contract
    network: {{ slug }}
    source:
      abi: InfraredVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/infrared-vault.ts
      entities:
        - Vault
        - User 
        - Deposit
        - Withdraw
        - Token
      abis:
        - name: InfraredVault
          file: ../contracts/out/InfraredVault.sol/InfraredVault.abi.json
        - name: ERC20
          file: ../contracts/out/ERC20.sol/ERC20.abi.json
      eventHandlers:
        - event: Staked(indexed address,uint256)
          handler: handleStaked
        - event: Withdrawn(indexed address,uint256)
          handler: handleWithdrawn
        - event: RewardPaid(indexed address,indexed address,uint256)
          handler: handleRewardPaid
